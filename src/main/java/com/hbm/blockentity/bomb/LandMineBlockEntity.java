package com.hbm.blockentity.bomb;

import com.hbm.blockentity.ModBlockEntities;
import com.hbm.blocks.bomb.LandmineBlock;
import com.hbm.lib.ModSounds;
import net.minecraft.core.BlockPos;
import net.minecraft.core.HolderLookup;
import net.minecraft.nbt.CompoundTag;
import net.minecraft.sounds.SoundSource;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.MobCategory;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.entity.BlockEntity;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.phys.AABB;

import java.util.List;

public class LandMineBlockEntity extends BlockEntity {

    private boolean isPrimed = false;
    private boolean waitingForPlayer = false;

    public LandMineBlockEntity(BlockPos pos, BlockState blockState) {
        super(ModBlockEntities.LANDMINE.get(), pos, blockState);
    }

    public static void serverTick(Level level, BlockPos pos, BlockState state, LandMineBlockEntity blockEntity) {
        if (!(state.getBlock() instanceof LandmineBlock landmine)) return;

        double range = landmine.range;
        double height = landmine.height;

        if (blockEntity.waitingForPlayer) {
            range = 25;
            height = 25;
        } else if (!blockEntity.isPrimed) {
            range *= 2;
            height *= 2;
        }

        if (!level.isEmptyBlock(pos.above())) return;
        List<Entity> entities = level.getEntities(null, new AABB(pos.getX() - range, pos.getY() - height, pos.getZ() - range, pos.getX() + range + 1, pos.getY() + height, pos.getZ() + range + 1));

        for (Entity entity : entities) {

            if (entity.getType().getCategory() == MobCategory.WATER_CREATURE) continue;
            if (entity.getType().getCategory() == MobCategory.AMBIENT) continue;

            if (blockEntity.waitingForPlayer) {
                // This mine has been generated by worldgen and is ignoring mobs until a player is close enough
                // This is to prevent worldgen mines from detonating well before they become gameplay relevant

                if (entity instanceof Player) {
                    blockEntity.waitingForPlayer = false;
                    return;
                }
            } else {
                if (entity instanceof LivingEntity) {
                    if (blockEntity.isPrimed) {
                        //the explosion is part of the mine block so that the IBomb interface works, i remember now
                        landmine.explode(level, pos.getX(), pos.getY(), pos.getZ());
                    }
                    return;
                }
            }
        }


        // After placing, the mine needs to prime itself in order to not immediately kill the placer
        // The mine will prime itself only after all entities have left its trigger radius * 2
        // I'm leaving this note because I made a dumb assumption on what this was meant to do
        if (!blockEntity.isPrimed && !blockEntity.waitingForPlayer) {
            //level.playSound(null, pos, ModSounds.FSTBMB_START.get(), SoundSource.BLOCKS, 3.0F, 1.0F);
            blockEntity.isPrimed = true;
        }
    }

    @Override
    protected void loadAdditional(CompoundTag tag, HolderLookup.Provider registries) {
        super.loadAdditional(tag, registries);

        isPrimed = tag.getBoolean("Primed");
        waitingForPlayer = tag.getBoolean("Waiting");
    }

    @Override
    protected void saveAdditional(CompoundTag tag, HolderLookup.Provider registries) {
        super.saveAdditional(tag, registries);

        tag.putBoolean("Primed", isPrimed);
        tag.putBoolean("Waiting", waitingForPlayer);
    }
}
